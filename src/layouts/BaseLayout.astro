---
import Header from '../components/Header.astro'
import CursorFollower from '../components/CursorFollower.astro'
import '../styles/global.css'
import '../styles/layouts/BaseLayout.css'

interface Props {
  title?: string
  description?: string
  image?: string
}

const { title = '', description = '', image = '/meta.png' } = Astro.props

const siteUrl = Astro.site?.toString()
const imageUrl = `${siteUrl}${image}`
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />

    <!-- Sitemap Plugin Integration -->
    <link rel="sitemap" href="/corunatech/sitemap-index.xml" />

    <!-- Favicon Generated with https://favicon.io -->
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/corunatech/apple-touch-icon.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/corunatech/favicon-32x32.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/corunatech/favicon-16x16.png"
    />
    <link rel="manifest" href="/corunatech/site.webmanifest" />

    <!-- Meta Tags Generated with https://metatags.io -->
    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={siteUrl} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={imageUrl} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={siteUrl} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={imageUrl} />

    <script is:inline>
      const theme = (() => {
        if (
          typeof localStorage !== 'undefined' &&
          localStorage.getItem('theme')
        ) {
          return localStorage.getItem('theme')
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark'
        }
        return 'light'
      })()

      document.documentElement.setAttribute('data-theme', theme)
    </script>
  </head>
  <body>
    <Header />
    <slot />
    <CursorFollower />
  </body>
</html>
