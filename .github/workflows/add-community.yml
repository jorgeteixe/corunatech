name: Add Community

on:
  issues:
    types: [opened, edited, labeled, reopened]

jobs:
  process-community:
    if: contains(github.event.issue.labels.*.name, 'add-community')
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Parse issue form
        id: issue-parser
        uses: stefanbuck/github-issue-parser@v3
        with:
          template-path: .github/ISSUE_TEMPLATE/01-add-community.yml

      - name: Validate and process community
        id: process
        uses: actions/github-script@v7
        env:
          PARSED_ISSUE: ${{ steps.issue-parser.outputs.jsonString }}
        with:
          script: |
            const script = require('./.github/scripts/parse-community.cjs')
            await script({github, context, core})

      - name: Create community file and PR
        if: steps.process.outputs.valid == 'true'
        run: |
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Create new branch
          BRANCH_NAME="add-community-${{ steps.process.outputs.slug }}"
          git checkout -b "$BRANCH_NAME"
          
          # Create community file
          mkdir -p src/content/communities
          echo '${{ steps.process.outputs.yaml_content }}' > "src/content/communities/${{ steps.process.outputs.slug }}.yaml"
          
          # Commit changes
          git add "src/content/communities/${{ steps.process.outputs.slug }}.yaml"
          git commit -m "feat: add ${{ steps.process.outputs.name }} community

          Closes #${{ github.event.issue.number }}
          
          ðŸ¤– Generated with GitHub Actions"
          
          # Push branch
          git push origin "$BRANCH_NAME"

      - name: Create pull request
        if: steps.process.outputs.valid == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `feat: add ${{ steps.process.outputs.name }} community`,
              head: `add-community-${{ steps.process.outputs.slug }}`,
              base: 'main',
              body: `## Nova comunidade: ${{ steps.process.outputs.name }}
            
            Esta PR engade unha nova comunidade ao directorio de CoruÃ±aTech.
            
            **Detalles:**
            - Nome: ${{ steps.process.outputs.name }}
            - Slug: ${{ steps.process.outputs.slug }}
            
            Closes #${{ github.event.issue.number }}
            
            ---
            ðŸ¤– Generated automatically from issue form`
            });
            
            // Add success comment to issue
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `âœ… **ValidaciÃ³n exitosa**
            
            A comunidade foi validada correctamente. Creouse a PR #${pr.number} para revisar e fusionar os cambios.
            
            **Arquivo creado:** \`src/content/communities/${{ steps.process.outputs.slug }}.yaml\``
            });
            
            // Add labels
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['validation-passed', 'pr-created']
            });
