name: Add Event

on:
  issues:
    types: [opened]

jobs:
  process-event:
    if: contains(github.event.issue.labels.*.name, 'add-event')
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Parse issue form
        id: issue-parser
        uses: stefanbuck/github-issue-parser@v3
        with:
          template-path: .github/ISSUE_TEMPLATE/02-add-event.yml

      - name: Validate and process event
        id: process
        uses: actions/github-script@v7
        env:
          PARSED_ISSUE: ${{ steps.issue-parser.outputs.jsonString }}
        with:
          script: |
            const script = require('./.github/scripts/parse-event.js');
            await script({ github, context, core, process })();

      - name: Check if event already exists
        if: steps.process.outputs.valid == 'true'
        id: check_exists
        run: |
          if [ -f "src/content/events/${{ steps.process.outputs.slug }}.yaml" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Comment if event exists
        if: steps.process.outputs.valid == 'true' && steps.check_exists.outputs.exists == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `❌ **Evento xa existe**\n\nXa existe un evento co slug \`${{ steps.process.outputs.slug }}\`. Por favor verifica se xa está rexistrado ou cambia o título/data.`
            });
            
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['duplicate']
            });

      - name: Create branch and file
        if: steps.process.outputs.valid == 'true' && steps.check_exists.outputs.exists == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Create branch
          BRANCH="add-event-${{ steps.process.outputs.slug }}"
          git checkout -b "$BRANCH"
          
          # Create event file
          echo "${{ steps.process.outputs.yaml_content }}" > "src/content/events/${{ steps.process.outputs.slug }}.yaml"
          
          # Commit changes
          git add "src/content/events/${{ steps.process.outputs.slug }}.yaml"
          git commit -m "feat: engade evento ${{ steps.process.outputs.title }}

          - Engade novo evento: ${{ steps.process.outputs.title }}
          - Comunidade organizadora: ${{ steps.process.outputs.community }}
          - Data: ${{ steps.process.outputs.date }}
          - Ficheiro: src/content/events/${{ steps.process.outputs.slug }}.yaml
          - Closes #${{ github.event.issue.number }}"
          
          # Push branch
          git push origin "$BRANCH"
          
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

      - name: Create Pull Request
        if: steps.process.outputs.valid == 'true' && steps.check_exists.outputs.exists == 'false'
        uses: actions/github-script@v7
        env:
          TITLE: ${{ steps.process.outputs.title }}
          SLUG: ${{ steps.process.outputs.slug }}
          COMMUNITY: ${{ steps.process.outputs.community }}
          DATE: ${{ steps.process.outputs.date }}
        with:
          script: |
            const script = require('./.github/scripts/create-pr.js');
            await script({ github, context, core })('event', {
              title: process.env.TITLE,
              slug: process.env.SLUG,
              community: process.env.COMMUNITY,
              date: process.env.DATE
            });